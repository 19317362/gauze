# Copyright (c) 2015, Ruslan Baratov
# Copyright (c) 2016, David Hirvonen
# All rights reserved.

cmake_minimum_required(VERSION 3.1) # CMP0054

if("@GAUZE_IOS_DEPLOY@" STREQUAL "")
  message(FATAL_ERROR "Expected GAUZE_IOS_DEPLOY")
endif()

if("@RESOURCE_DIR@" STREQUAL "")
  message(FATAL_ERROR "Expected RESOURCE_DIR")
endif()

if("@GAUZE_IOS_UPLOAD_ROOT@" STREQUAL "")
  message(FATAL_ERROR "Expected GAUZE_IOS_UPLOAD_ROOT")
endif()

if("@BUNDLE_ID@" STREQUAL "")
  message(FATAL_ERROR "Expected BUNDLE_ID")
endif()

if("${APP_SOURCE}" STREQUAL "")
  message(FATAL_ERROR "Expected APP_SOURCE")
endif()

function(run_cmd)
  set(cmd "${ARGN}")
  string(REPLACE ";" " " human_readable "${cmd}")
  message("> ${human_readable}")
  execute_process(
      COMMAND ${cmd}
      RESULT_VARIABLE result
      OUTPUT_VARIABLE output
      ERROR_VARIABLE output
      OUTPUT_STRIP_TRAILING_WHITESPACE
      ERROR_STRIP_TRAILING_WHITESPACE
  )

  message("Result: ${result}")
  message("Output:")
  message("*** BEGIN ***")
  message("${output}")
  message("*** END ***")

  if(NOT result EQUAL 0)
    message(FATAL_ERROR "Command failed")
  endif()
endfunction()

# APP_SOURCE=/SomeLongPathy/MinSizeRel${EFFECTIVE_PLATFORM_NAME}/test-gauze-core.app/test-gauze-core
# APP_DIR=/SomeLongPathy/MinSizeRel${EFFECTIVE_PLATFORM_NAME}/test-gauze-core.app
# APP_DIR_EFF=/SomeLongPathy/MinSizeRel-iphoneos/test-gauze-core.app"

# Get the *.app directory name
get_filename_component(APP_DIR "${APP_SOURCE}" DIRECTORY)

# Query replace "${EFFECTIVE_PLATFORM_NAME}" -> "-iphoneos"
# See discussion related to generator expressions (in ios_add_test()) here:
# http://public.kitware.com/pipermail/cmake/2016-March/063113.html

# TODO: This part is tricky. We should generate some code at configure step,
# but the EFFECTIVE_PLATFORM_NAME can be determined only on build step
# (see https://github.com/Kitware/CMake/blob/0d8874e49374fda8513f1f3c5fa1797aa86d90ed/Modules/CMakeIOSInstallCombined.cmake#L166-L174)
# On the test step there is no way to specify simulator/device SDK.

# Expand EFFECTIVE_PLATFORM_NAME
string(REPLACE "\${EFFECTIVE_PLATFORM_NAME}" "-iphoneos" APP_DIR_EFF "${APP_DIR}")

# '--no-wifi' needed to avoid this bug:
# * https://github.com/phonegap/ios-deploy/issues/170
# Most importantly without the '--no-wifi' flag 'ios-deploy' can
# exits with error message but without error code (!) i.e.
# all tests will seem to be passed.

set(ios_deploy "@GAUZE_IOS_DEPLOY@" --no-wifi)

message("Test that iOS device is connected")
run_cmd(${ios_deploy} --detect)

###
### Install application
###

message("Installing iOS bundle with ID '@BUNDLE_ID@'")
run_cmd(${ios_deploy} --uninstall --nostart --bundle "${APP_DIR_EFF}")

# Upload resources and start application

set(cmd ${ios_deploy} --noninteractive --noinstall --bundle "${APP_DIR_EFF}")

set(app_arguments "@APP_ARGUMENTS@")
set(arguments)
foreach(arg ${app_arguments})
  string(
      REGEX
      REPLACE
      "^\(.*\)\\$<GAUZE_RESOURCE_FILE:\(.*\)>$"
      "\\2"
      resource_file
      "${arg}"
  )

  string(
      REGEX
      REPLACE
      "^\(.*\)\\$<GAUZE_RESOURCE_DIR:\(.*\)>$"
      "\\2"
      resource_dir
      "${arg}"
  )

  set(is_resource_file FALSE)
  set(is_resource_dir FALSE)

  if("${resource_file}" STREQUAL "${arg}")
    # nothing replaced => not a resource file
    if("${resource_dir}" STREQUAL "${arg}")
      # nothing replaced => not a directory with resources
    else()
      # '$<GAUZE_RESOURCE_DIR:...>' detected => directory with resources
      set(is_resource_dir TRUE)
    endif()
  else()
    # '$<GAUZE_RESOURCE_FILE:...>' detected => resource file
    set(is_resource_file TRUE)
  endif()

  if(is_resource_file)
    message("Resource detected: '${resource_file}'")
    if(NOT IS_ABSOLUTE "${resource_file}")
      set(resource_file "@RESOURCE_DIR@/${resource_file}")
    endif()
    if(NOT EXISTS "${resource_file}")
      message(FATAL_ERROR "File not found: ${resource_file}")
    endif()
    if(IS_DIRECTORY "${resource_file}")
      message(FATAL_ERROR "Not a file but directory: ${resource_file}")
    endif()
    get_filename_component(res_name "${resource_file}" NAME)
    set(res_path "@GAUZE_IOS_UPLOAD_ROOT@/${res_name}")

    # We need to keep GAUZE_RESOURCE_FILE for one more round of
    # expansion because we need runtime HOME variable (see 'gauze.cpp')
    set(arguments "${arguments} \"\$<GAUZE_RESOURCE_FILE:${res_path}>\"")

    message("Push resource to iOS device (bundle-id '@BUNDLE_ID@'):")
    message("  '${resource_file}'")
    message("  -> '${res_path}'")

    run_cmd(${ios_deploy} --bundle_id "@BUNDLE_ID@" --upload "${resource_file}" --to "${res_path}")
  elseif(is_resource_dir)
    message("Directory with resources detected: '${resource_dir}'")
    if(NOT IS_ABSOLUTE "${resource_dir}")
      set(resource_dir "@RESOURCE_DIR@/${resource_dir}")
    endif()
    if(NOT EXISTS "${resource_dir}")
      message(FATAL_ERROR "Directory not found: ${resource_dir}")
    endif()
    if(NOT IS_DIRECTORY "${resource_dir}")
      message(FATAL_ERROR "Not a directory: ${resource_dir}")
    endif()
    get_filename_component(res_name "${resource_dir}" NAME)
    set(res_path "@GAUZE_IOS_UPLOAD_ROOT@/${res_name}")

    # We need to keep GAUZE_RESOURCE_FILE for one more round of
    # expansion because we need runtime HOME variable (see 'gauze.cpp')
    # NOTE: GAUZE_RESOURCE_FILE used instead of GAUZE_RESOURCE_DIR
    # to simplify logic (see gauze.cpp)
    set(arguments "${arguments} \"\$<GAUZE_RESOURCE_FILE:${res_path}>\"")

    message("Push directory to iOS device (bundle-id '@BUNDLE_ID@'):")
    message("  '${resource_dir}'")
    message("  -> '${res_path}'")

    run_cmd(${ios_deploy} --bundle_id "@BUNDLE_ID@" --upload "${resource_dir}" --to "${res_path}")
  else()
    set(arguments "${arguments} \"${arg}\"")
  endif()
endforeach()

if(NOT "${arguments}" STREQUAL "")
  list(APPEND cmd "--args" "${arguments}")
endif()

run_cmd(${cmd})
